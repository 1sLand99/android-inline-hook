# We found that AGP could not generate the correct cmake configuration
# when relying on a prefab package generated by another local project.
# We had to write one ourselves.
#
# Use it like this:
#
# if(DEPENDENCY_ON_LOCAL_LIBRARY)
#     include(${CMAKE_CURRENT_SOURCE_DIR}/../../../../shadowhook/local_dependency.cmake)
# else()
#     find_package(shadowhook REQUIRED CONFIG)
# endif()
#
# target_link_libraries(myapp shadowhook::shadowhook)
#

string(TOLOWER ${CMAKE_BUILD_TYPE} SHADOWHOOK_BUILD_TYPE_DIRNAME)
if(${SHADOWHOOK_BUILD_TYPE_DIRNAME} STREQUAL "relwithdebinfo")
    set(SHADOWHOOK_BUILD_TYPE_DIRNAME "release")
endif()

set(SHADOWHOOK_BASE ${CMAKE_CURRENT_SOURCE_DIR}/../../../../shadowhook)

add_library(shadowhook::shadowhook SHARED IMPORTED)
set_target_properties(shadowhook::shadowhook PROPERTIES
        IMPORTED_LOCATION "${SHADOWHOOK_BASE}/build/intermediates/cmake/${SHADOWHOOK_BUILD_TYPE_DIRNAME}/obj/${ANDROID_ABI}/libshadowhook.so"
        INTERFACE_INCLUDE_DIRECTORIES "${SHADOWHOOK_BASE}/src/main/cpp/include"
        INTERFACE_LINK_LIBRARIES ""
)
